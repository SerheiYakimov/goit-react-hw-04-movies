{"version":3,"sources":["components/MovieDetails/MovieDetails.js","components/MovieCast/MovieCast.js","pages/MovieDetailsPage.js","images/not-found-image.jpeg","services/theMoviedDB.js"],"names":["MovieDetails","movie","imagePoster","poster_path","notFoundImage","src","alt","original_title","release_date","popularity","overview","genres","map","genre","name","join","MovieCast","cast","actor","profile_path","original_name","id","newMoviedFetch","MoviedFetch","MovieDetailsPage","history","useHistory","location","useLocation","params","useParams","useState","setMovie","setCast","useEffect","searchMoviesId","movieId","then","state","push","pathname","catch","error","alert","searchMoviesCast","type","onClick","from","label","to","path","propsTypes","handleClick","PropTypes","func","string","this","_searchQuery","_page","value","fetch","axios","get","result","data","results","console","log"],"mappings":"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","file":"static/js/Movie Details Page.bf64fb6e.chunk.js","sourcesContent":["import notFoundImage from \"../../images/not-found-image.jpeg\";\n\n\nexport default function MovieDetails({ movie }) {\n  const imageUrl = \"https://image.tmdb.org/t/p/w200\";\n  const imagePoster = movie.poster_path\n    ? `${imageUrl}${movie.poster_path}`\n    : notFoundImage;\n  return (\n    <article>\n      <img src={imagePoster} alt={movie.original_title} />\n      <div>\n        <h2>{movie.original_title}</h2>\n        <span>{movie.release_date}</span>\n        <h3>Popularity</h3>\n        <p>{movie.popularity}</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{movie.genres.map((genre) => genre.name).join(\", \")}</p>\n      </div>\n    </article>\n  );\n}\n\n\n","import notFoundImage from \"../../images/not-found-image.jpeg\";\n\nexport default function MovieCast({ cast }) {\n    const imageUrl = \"https://image.tmdb.org/t/p/w200\";\n    \n    return (\n        <div>\n            <h3>Actors</h3>\n            <ul>\n                {cast.map((actor) => (\n                    <li key={actor.id}>\n                        <img src={actor.profile_path\n                            ? `${imageUrl}${actor.profile_path}`\n                            : notFoundImage} alt={actor.original_name}\n                        />\n                        <h3>{actor.original_name}</h3>\n                    </li>\n                ))}\n                \n            </ul>\n            \n        </div>\n    );\n}","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { Route, useHistory, useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport MoviedFetch from \"../services/theMoviedDB\";\nimport MovieDetails from \"../components/MovieDetails/MovieDetails\";\nimport MovieCast from '../components/MovieCast/MovieCast';\n\nconst newMoviedFetch = new MoviedFetch();\n\nexport default function MovieDetailsPage() {\n    const history = useHistory();\n    const location = useLocation();\n    const params = useParams();\n    const [movie, setMovie] = useState(null);\n    const [cast, setCast] = useState(null);\n    \n\n    useEffect(() => {\n        newMoviedFetch\n        .searchMoviesId(params.movieId)\n        .then((movie) => {\n            if (location.state) {\n            setMovie(movie);\n            } else {\n            history.push((location.pathname = \"/notFound\"));\n            }\n        })\n        .catch((error) => alert(error));\n    }, [params.movieId, history, location]);\n    \n    useEffect(() => {\n        newMoviedFetch.searchMoviesCast(params.movieId)\n            .then(setCast)\n            .catch((error) => alert(error));\n    }, [params.movieId]);\n    // console.log('cast', cast);\n    \n\n  const handleClick = () => {\n    history.push(location?.state?.from?.location ?? \"/movies\");\n  };\n\n  return (\n    <>\n        <h1>Movie Details</h1>\n        <button type=\"button\" onClick={handleClick}>\n            {location?.state?.from?.label ?? \"Go Back\"}\n        </button>\n          {movie && <MovieDetails movie={movie} />}\n          <h2>Additional Information</h2>\n          <ul>\n              <li>\n                <Link\n                    to={{\n                    pathname: `/movies/${params.movieId}/cast`,\n                    state: {\n                        from: history.location.state?.from ?? \"/movies\",\n                        label: \"back to movies from cast\",\n                    },\n                      }}\n                  >\n                    \n                \n                Cast\n                </Link>\n\n              </li>\n              <li></li>\n          </ul>\n        <Route path=\"/movies/:movieId/cast\">\n              {cast && <MovieCast cast={cast} />}\n          </Route>\n          {/* <Route path=\"/movies/:movieId/reviews\">\n            <MovieReviews />\n        </Route> */}\n          \n          \n    </>\n  );\n}\n\nMovieDetailsPage.propsTypes = {\n  handleClick: PropTypes.func,\n  movie: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/media/not-found-image.22bff5ce.jpeg\";","import axios from \"axios\";\n\nexport default class MoviedFetch {\n  constructor() {\n    this._searchQuery = \"\";\n    this._page = 1;\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  trendingMovies() {\n    const url = \"https://api.themoviedb.org/3/\";\n    const apiKey = \"7c2b2b3c6c797e2889781dee57c7a6ae\";\n    const params = `trending/all/day?api_key=${apiKey}&page=${this._page}`;\n    const fetch = url + params;\n    return axios\n      .get(fetch)\n      .then((result) => {\n        // console.log(result);\n        return result.data;\n      })\n      .then((data) => {\n        // console.log(data.results);\n        return data.results;\n      })\n      .catch((error) => console.log(error));\n  }\n\n  searchMovies() {\n    const url = \"https://api.themoviedb.org/3/\";\n    const apiKey = \"7c2b2b3c6c797e2889781dee57c7a6ae\";\n    const params = `search/movie?api_key=${apiKey}&query=${this._searchQuery}&language=en-US&page=${this._page}&include_adult=false`;\n    const fetch = url + params;\n    return axios\n      .get(fetch)\n      .then((result) => {\n        // console.log(result);\n        return result.data;\n      })\n      .then((data) => {\n        // console.log(data.results);\n        return data.results;\n      })\n      .catch((error) => console.log(error));\n  }\n\n  searchMoviesId(id) {\n    const url = \"https://api.themoviedb.org/3/\";\n    const apiKey = \"7c2b2b3c6c797e2889781dee57c7a6ae\";\n    const params = `movie/${id}?api_key=${apiKey}&language=en-US`;\n    const fetch = url + params;\n    return (\n      axios\n        .get(fetch)\n        .then((result) => {\n          // console.log(result);\n          return result.data;\n        })\n        .catch((error) => console.log(error))\n    );\n  }\n\n  searchMoviesCast(id) {\n    const url = \"https://api.themoviedb.org/3/\";\n    const apiKey = \"7c2b2b3c6c797e2889781dee57c7a6ae\";\n    const params = `movie/${id}/credits?api_key=${apiKey}&language=en-US`;\n    const fetch = url + params;\n    return (\n      axios\n        .get(fetch)\n        .then((result) => {\n          console.log(result);\n          return result.data;\n        })\n        .then((data) => {\n        console.log(data.cast);\n        return data.cast;\n      })\n        .catch((error) => console.log(error))\n    );\n  }\n\n  searchMoviesReviews(id) {\n    const url = \"https://api.themoviedb.org/3/\";\n    const apiKey = \"7c2b2b3c6c797e2889781dee57c7a6ae\";\n    const params = `movie/${id}/reviews?api_key=${apiKey}&language=en-US`;\n    const fetch = url + params;\n    return (\n      axios\n        .get(fetch)\n        .then((result) => {\n          // console.log(result);\n          return result.data;\n        })\n        .catch((error) => console.log(error))\n    );\n  }\n}\n"],"sourceRoot":""}